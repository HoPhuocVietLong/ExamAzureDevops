# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main


stages:
- stage: RunTests
  displayName: Run All Tests
  jobs:
  - job: RunUnitTests
    displayName: 'Run Unit Tests:'
    strategy:
      matrix:
        frontendTest:
              gradleTask: 'checkStyleFrontend'
              gradleTaskDisplayname: 'frontend'
              preTestCommand: |
                npm --version
                node --version
                npm install
        backendTest:
              gradleTask: 'checkstyleMain checkstyleTest test'
              gradleTaskDisplayname: 'backend'
              preTestCommand: |
                java --version
                which java
      maxParallel: 2
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: ./gradlew task --build-cache $(preTestCommand)
    - task: Gradle@2
      displayName: Run $(gradleTaskDisplayname) tests
      inputs:
        gradleWrapperFile: 'gradlew'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '17'
        jdkArchitectureOption: 'x64'
        gradleOptions: '-Xmx3072m'
        tasks: $(gradleTask)